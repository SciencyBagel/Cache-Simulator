//Default: NUM_BLOCKS = 512

#define BLOCK_SIZE 64        /* Cache block size (or cache line size) in bytes \\
                                 (must be power of 2). 4 Bytes = 1 Word */
#define CACHE_SIZE 32768     /* Cache capacity in bytes (must be power of 2)*/
#define NUM_BLOCKS (CACHE_SIZE / BLOCK_SIZE)
int WAY_SIZE = 1;         /* Associativity; 1-way = direct-mapped. Changed by arguments */
int NUM_SETS = 0;
=====================================================
//NUM_BLOCKS = 2048

#define BLOCK_SIZE 16        /* Cache block size (or cache line size) in bytes \\
                                 (must be power of 2). 4 Bytes = 1 Word */
#define CACHE_SIZE 32768     /* Cache capacity in bytes (must be power of 2)*/
#define NUM_BLOCKS (CACHE_SIZE / BLOCK_SIZE) //512 if all values are the same
int WAY_SIZE = 1;         /* Associativity; 1-way = direct-mapped. Changed by arguments */
int NUM_SETS = 0;
=====================================================
//NUM_BLOCKS = 1024

#define BLOCK_SIZE 32        /* Cache block size (or cache line size) in bytes \\
                                 (must be power of 2). 4 Bytes = 1 Word */
#define CACHE_SIZE 32768     /* Cache capacity in bytes (must be power of 2)*/
#define NUM_BLOCKS (CACHE_SIZE / BLOCK_SIZE) //512 if all values are the same
int WAY_SIZE = 1;         /* Associativity; 1-way = direct-mapped. Changed by arguments */
int NUM_SETS = 0;
=====================================================
//NUM_BLOCKS = 256

#define BLOCK_SIZE 128       /* Cache block size (or cache line size) in bytes \\
                                 (must be power of 2). 4 Bytes = 1 Word */
#define CACHE_SIZE 32768     /* Cache capacity in bytes (must be power of 2)*/
#define NUM_BLOCKS (CACHE_SIZE / BLOCK_SIZE) //512 if all values are the same
int WAY_SIZE = 1;         /* Associativity; 1-way = direct-mapped. Changed by arguments */
int NUM_SETS = 0;
=====================================================